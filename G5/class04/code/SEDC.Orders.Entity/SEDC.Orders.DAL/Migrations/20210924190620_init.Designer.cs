// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SEDC.Orders.DAL.Context;

namespace SEDC.Orders.DAL.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20210924190620_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SEDC.Orders.DAL.DomainModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("IsDelievered")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnName("order-number")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "random address 1",
                            IsDelievered = false,
                            OrderCreationDate = new DateTime(2021, 9, 24, 21, 6, 20, 453, DateTimeKind.Local).AddTicks(7882),
                            OrderNumber = 1111,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "random address 2",
                            IsDelievered = true,
                            OrderCreationDate = new DateTime(2021, 9, 24, 21, 6, 20, 456, DateTimeKind.Local).AddTicks(458),
                            OrderNumber = 2222,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SEDC.Orders.DAL.DomainModels.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Id = 1
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Id = 2
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 1,
                            Id = 3
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 2,
                            Id = 4
                        });
                });

            modelBuilder.Entity("SEDC.Orders.DAL.DomainModels.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductName = "Pizza"
                        },
                        new
                        {
                            ProductId = 2,
                            ProductName = "Burger"
                        });
                });

            modelBuilder.Entity("SEDC.Orders.DAL.DomainModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Viktor Jakovlev",
                            Password = "P@ssw0rd",
                            Username = "vjakovlev"
                        });
                });

            modelBuilder.Entity("SEDC.Orders.DAL.DomainModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FavouriteFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfOrders")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("SEDC.Orders.DAL.DomainModels.Order", b =>
                {
                    b.HasOne("SEDC.Orders.DAL.DomainModels.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("MyFKConstraint")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEDC.Orders.DAL.DomainModels.OrderProduct", b =>
                {
                    b.HasOne("SEDC.Orders.DAL.DomainModels.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SEDC.Orders.DAL.DomainModels.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEDC.Orders.DAL.DomainModels.UserInfo", b =>
                {
                    b.HasOne("SEDC.Orders.DAL.DomainModels.User", "User")
                        .WithOne("UserInfo")
                        .HasForeignKey("SEDC.Orders.DAL.DomainModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
